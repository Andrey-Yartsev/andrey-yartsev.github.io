(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{227:function(e,n,r){"use strict";r.r(n),n.default=[{name:"Retloko",mode:"remote",period:"сентябрь 2018 г. — февраль 2022 г.",projects:[{name:"Создание с нуля фронтенда для adult соц-сети <a href='https://stars.avn.com' target='_blank'>stars.avn.com</a>",technologies:["Vue.js"]},{name:"Конвертер видео и картинок с загрузкой на Amazon S3",technologies:["PHP","amazon s3 library"]}]},{name:"Nitka Technologies",mode:"remote",period:"февраль 2018 г. — сентябрь 2018 г.",projects:[{name:"Бекенд для лотереи на базе Etherium сети",technologies:["web3","nodejs"]},{name:"Фронтенд для лотереи на базе Etherium сети",technologies:["Vue.js","web3","geth"],progress:["Изучение блокчейн-моедли Etherium сети","Изучение Ethereum JavaScript API","Работа с контрактами"]},{name:"Бекенд для Etherium-лотереи. Реализация личного кабинета и игры по расписанию. Возможность создавать на сервере отдельный кошелёк, игра с которого будет производится в автоматическом режиме.",technologies:["node.js","Hapi framework"],progress:["Работа с финансами, высокая ответственность за неправильно рассчитанные стоимости газа. Массовая покупка подарочных билетов, распределенная по времени на несколько часов. Отладка стабильности работы клиента geth на тестовой и продакшн сетях."]}]},{name:"rentateam.ru",mode:"remote",period:"сентябрь 2017 г. — февраль 2018 г.",projects:[{name:"Сервер для мобильного приложения заказа еды",technologies:["Nodal","PostgreSQL"],progress:["Интеграция платежной системы для оплаты картами в продакшн проект с реальными пользователями","Коммуникация с iOS и Android разработчиками","Знакомство с PostgreSQL","Знакомство с Nodal фреймворком и его ORM","Используемые технические средства"]},{name:"Админка для мобильного приложения заказа еды",technologies:["Vue.js"],progress:["Знакомство с фреймворком vuejs"]},{name:"Админка для системы мониторинга постов",technologies:["React","Mobx"],progress:["Знакомство с реактивным фреймворком mobx"]},{name:"Интернет банк",technologies:["Vue.js"],progress:["Воссоздание с нуля нового фронта по макету дизайна, старому интерфейсу и новому “сырому” API","Общение на английском с заказчиком","Разработка в короткий срок в команде из 3-х человек (фроентэндеры)"]},{name:"vcv.ru",technologies:["Vue.js"],progress:["Коммуникации в команде из ~12 человек (frontend, backend, PM)","Рефакторинг “грязного” vuejs-кода сторонних разработчиков","Подготовка к релизу новой версии"]}]},{name:"Группа компаний ЛАД",mode:"office",period:"сентябрь 2017 г. — февраль 2018 г.",projects:[{name:"Приложение helpme для смарт-кассы Эвотор",description:"\n- Клиент (webview)<br>\n- REST сервер для работы с asterisk’ом<br>\n- REST сервер для остальной логики<br>\n<b>Функции:</b><br>\n- Набор номера, отображение статуса звонка, фидбек о качестве звонка\n      ",technologies:["React+Redux","Эвотор webview API","Docker/Rancher","Drone","Cucumber","NodeJS","hapi"],progress:["Тяжелое Общение с командой Эвотор - редкие отевты. Работа в отсутствии полноценной документации по API. Часто меняющееся API.","Изучение Docker","Изучение Rancher","Изучение Drone (Continuous Delivery)","Изучение cucumber (функциональные тесты)"]},{name:"Приложение helpme Оператов (клиент+сервер)",description:"\n- Клиент (web)<br>\n- REST/socket.io сервер\n<b>Функции</b>\n- Чат тех-подждержки клиентов<br>\n- Создание линий (чатов)<br>\n- Возможность брать/отдавать “линии”<br>\n- Прозрачные статусы открытия/закрывать тикетов (инцидентов)<br>\n- Возможность приглашать во взятую линию других операторов<br>\n",technologies:["React + Redux","NodeJS","hapi","mongodb","Docker/Rancher"],progress:["Изучение фреймворка nodejs hapiИзучение mongodb"]},{name:"Helpme chat client. Iframe приложение для личного кабинета клиента",text:"\n<b>Функции:</b>\nЧат для вопросов к тех-поддержке\n",technologies:["React+Redux","docker/rancher"]},{name:"Helpme LK. Клиент для личного кабинета в системе Эвотор (iframe)",text:"<b>Функции:</b><br>\nСтатистика звонков\n",technologies:["React+Redux"]},{name:"Helpme Admin Client",text:"\n      <b>Функции:</b><br>\nУправление операторами\n",technologies:["React+Redux","NodeJS","hapi","mongodb"]}]},{name:"Stratus Apps (zukul.com)",mode:"office, remote",period:"февраль 2016 г. — ноябрь 2016 г.",projects:[{name:"Zukul.com - проект в сфере интернет маркетинга с пирамидальной (МММ) логикой заработка.",text:"Визуальный редактор баннеров с бесплатным вариантом использования, в котором ограничивается количество раз, которое баннер может быть отрендерен.\nhttps://zukulbannercreator.net\nДля просмотра проекта необходимо выполнить вход, открыть страницу \"My Banners\" и нажать \nна редактирование баннера в таблице. Данные для входа:\nlogin: andrey.yartsev.g@gmail.com\npassword: ood1y60p\n\n        Оценка. Для старта был выбран собственный существующий pet-project, сервис визуальной вёрстки.\nПричины:\n- Гибкая архитектура<br>\n- Кратчайший путь к Minimum Viable Product<br>\nВ результате: функционал рендеринга был заменён с HTML на PNG, и демо-версия была готова через неделю.<br>\nСоздание элементов с поддержкой покадрового рендеринга (текст, картинки)<br>\n- Редактирование: элемент формы текст/картинка с возможностью добавления любого количества<br>\n- Визуальная смена кадров в редакторе<br>\n- Рендеринг:<br>\n- - добавлены события смены кадров, которые можно было бы перехватить в phantomjs<br>\n- - создание GIF с помощью GIFEncoder (https://gist.github.com/allometry/1438842)<br>\nплагин вставки кнопок, клипарта из библиотеки картинок предыдущей версии BannerCreator'а. Подключение к БД проекта, получение ссылок на файлы\nTrial-рендеринг: связь с покупкой подписки из общей системы Zukul. Каждый раз при рендеринге баннера, предлагается купить платный аккаунт. В BannerCreator'е используется общая библиотека биллинга для всех проектов zukul.com, которая получает статус оплаты аккаунта.\nтестирование: написание unit-тестов для “тяжелого” с логической т.з. плагина undo/redo в ходе его разработки\nКоммуникации с клиентом. Задачи поступали от партнёра команды из Англии. Общение проходило на английском языке в текстовой форме через Skype.\n",progress:["Адаптивная верстка лендинга. Это был первый опыт в этой области.","Успешный выпуск готового продукта на проекте с большой базой пользователей.","В ходе работы инструмент для управления задачами был сменен с Google Docs на Jira по моей инициативе, т.к. был успешный опыт работы в ней в НН.РУ."],technologies:["Ngn Framework"]}]},{name:"НН.РУ",mode:"office",period:"сентябрь 2014 г. — январь 2016 г.",projects:[{description:"\n    Библиотека для оптимизации подключений CSS, JS файлов.<br>\nЗадача: Выявить зависимости CSS/JS файлов на страницах портала и собрать их в пакеты.<br>\nБыл создан алгоритм поиска включений CSS/JS файлов и формирования пакетов в зависимости от частоты использования. Пример: 1.css используется 1 раз. Он подключается только на той странице, где использутеся.<br>\nФайл 2.css используется на 50 страницах. Он попадает в пакет package50, который включает в себя все файлы, что используются 50 раз, если такие есть.<br>\n<b>Функции:</b><br>\n- парсинг шаблонов для поиска ссылок<br>\n- разбор ссылок существующего CSS-сборщика<br>\n- сборщик: формирование базы связей и всех необходимых кэшей<br>\n- обновление базы кэша при изменении структуры страниц/шаблонов<br>\n- фронтенд системы: получение ссылок для конкретной страницы из кэша<br>",progress:["мною был придуман и внедрен алгоритм для анализа слабоструктурированной системы портала"],technologies:["PHP"]},{name:"NN.RU Афиша. Автоматическое обновление афиши из ряда источников",description:"\n      <b>Функции</b>:<br>\n- получение событий из различных источников (rambler, prizma)<br>\n- дополнение данных: парсинг kinopoisk'а<br>\n- добавление полей в существующую БД и ф-л сортировок<br>\n- модификация модераторской части под новую структуру<br>\n- тестирование: пример приёмочного теста: https://gist.github.com/Andrey-Yartsev/a5b0371323c0715899c704eb6f190e12\n<br><br>\nЗадача по парсингу кинопосика оказалась не тривиальной. Необходимо было:<br>\n- получить имеющиеся данные по фильму (название, режиссер, год и т.д.)<br>\n- найти ссылку на фильм с помощью API yandex-поиска<br>\n- спарсить данные со страницы кинопоиска<br>\n- убедиться, что это именно тот фильм, т.к. yandex-выдача была не идеальной<br>\n- проверить несколько других ссылки из yandex-выдачи в случае несоответствия<br>\n"},{name:"NN.RU Транспорт. Расписание транспорта Нижнего Новгорода",description:"\n      <b>Функции:</b><br>\n- получение данных через Яндекс API<br>\n- создание фронтенда (контроллеры, шаблоны)\n",technologies:["Laravel"],progress:["изучен фреймворк Laravel"]},{name:"NN.RU Формы. Сервис по созданию форм и возможностью включения их на страницы портала JS-кодом.",description:"\n      <b>Функции:</b>\n- редактор форм<br>\n- авторизация через NGS-паспорт на поддомене<br>\n- парсер ссылок формата docs.nn.ru/..., заменяющий их на виджет с формой<br>\n",progress:["благодаря имеющейся собственной библиотеке для редактирования форм проект был выполнен в течении недели."]},{name:"NN.RU Комментарии. Микросервис комментариев.",description:"CRUD для работы с комментариями через REST API",technologies:["PHP"]}]},{name:"E-promo",mode:"office",period:"январь 2011 г. — март 2014 г.",projects:[{name:"kreditpark.ru",description:"\n      Лидогенерационные проекты с сетью лендингов. Три проекта различной сложности по тематикам кредитов, поиска курсов и покупки автомобилей. Кредитный проект является наиболее сложным из них. Он объединяет в себе 8 сайтов под различные типы кредитов, а также около 15 сайтов, разработанных под VIP-клиентов. Каждый из сайтов имеет форму для заполнения заявки. В зависимости от требований конкретного клиента формы могут иметь свой набор необходимых полей. Все заявки объединены в бэк-офисе, где менеджеры могут работать с ними.\n<br>\n<b>Функции:</b>\n- Архитектура. Моей задачей, как архитектора, был перевод двух уже существующих проектов к единой кодовой базе, а также разработка двух новых проектов на основе существующих компонентов. Целью рефакторинга также была возможность быстрого создания новых лендингов для новых клиентов. В рамках рефакторинга было построено 3 слоя: фреймворк, библиотека для лендингов, проект. Всё это позволило быстрее и надёжнее развивать функционал всех 3-х проектов.<br>\n- Единый механизм построения форм с частичной кастомизацией через бэкофис.<br>\n- Тестирование критичных событий. Примеры тестов:<br>\n  https://gist.github.com/Andrey-Yartsev/30b307253d6bc4a71a3adbe24ce40df7<br>\n  https://gist.github.com/Andrey-Yartsev/34466d7f7c0fefa2d440dd596a7b7a4c<br>\n- Оценка, коммуникация с заказчиком: еженедельные митинги с начальством; ежедневный сбор требований от менеджеров и формирование пула задач.<br>\n- В мои последние пол года работы в компании, перешли на agile методологию.<br>\n- Для того, чтобы заявки в бэк-офисе отображались в реальном времени была использована технология веб-сокетов.<br>\n- Заявки валидируются с помощью подтверждения звоноком на телефон. Телефония обеспечивается Asterisk'ом. Мною был изучен AGI интерфейс к нему и выстроена надстройка над библиотекой PHPAGI с конкретной логикой для проектов. Статусы звонков (трубка поднята/звонок завершен/etc.) так же отображаются в реальном времени в таблице с заявками.\nТак же были применены очереди (rabbitmq) для избежания блокировок веб-сервера в случаях:<br>\n1) добавления заявки на фронтенде (тяжелые операции фильтрации);<br>\n2) выгрузки отчётов;<br>",progress:["Изучены технологии: Asterisk, AGI, RabbitMQ, nginx, php-fpm. Принималось много ответственных решений в плане архитектуры проектов."],technologies:["nginx","php-fpm","php5.3","MySQL","Asterisk","AGI","RabbitMQ","Ratchet","WebSockets","Ngn Framework"]},{name:"Автомобильный портал",description:"\nЗадачей было создать сайт для генерации органического трафика и конверсии его в лиды.<br>\n<b>Функции:</b><br>\n- создание архитектуры БД для автомобилей: марки, модели, модификации<br>\n- парсеры данных для этой БД с сайтов quto.ru, auto.yandex.ru, topdealers.ru<br>\n- работа в связке с разработчиком, занимающимся фронтендом и логикой контроллеров<br>\n- подключение системы обработки заявок, созданной для предыдущих проектов<br>\n",technologies:["nginx","php-fpm","php5.3","MySQL","Asterisk","AGI","RabbitMQ","Ratchet","WebSockets","Ngn Framework","PHPCrawler"]}]}]}}]);